version: "3.7"

services:
  redis:
    container_name: ${CONTAINER_NAME_REDIS}
    build:
      context: ../
      dockerfile: ./redis/Dockerfile
    restart: always
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_REDIS_IP}
    ports:
      - ${PORT_REDIS}:${PORT_REDIS}
  nginx:
    container_name: ${CONTAINER_NAME_NGINX}
    build:
      context: ../
      dockerfile: ./nginx/Dockerfile
    restart: always
    environment:
      IP_SERVER: ${CONTAINER_SERVER_IP}
      PORT_SERVER: ${PORT_SERVER}
      IP_CLIENT: ${CONTAINER_CLIENT_IP}
      PORT_CLIENT: ${PORT_CLIENT}
      PORT: ${PORT_NGINX}
      NGINX_ENVSUBST_OUTPUT_DIR: "/etc/nginx/"
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_NGINX_IP}
    volumes:
      # - ../nginx/:/etc/nginx/
      - ../nginx/logs/:/var/log/nginx/
    ports:
      - ${PORT_NGINX}:${PORT_NGINX}
    depends_on:
      - node-server
      - node-client
  mongo:
    container_name: ${CONTAINER_NAME_MONGO}
    image: mongo
    restart: always
    env_file:
      - ../.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ../.docker/mongodb:/data/db
    ports:
      - ${PORT_MONGO}:${PORT_MONGO}
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_MONGO_IP}
  node-server:
    container_name: ${CONTAINER_NAME_SERVER}
    restart: always

    build:
      context: ../
      dockerfile: ./server/docker/Dockerfile.prod

    env_file:
      - ../.env
    environment:
      SECRET: ${SECRET}
      PORT: ${PORT_SERVER}
      SALT: ${SALT}
      TIME_EXPIRE_ACCESS_TOKEN: ${TIME_EXPIRE_ACCESS_TOKEN}
      TIME_EXPIRE_REFRESH_TOKEN: ${TIME_EXPIRE_REFRESH_TOKEN}
      MONGO_URL: ${MONGO_URL}
      REDIS_URL: ${REDIS_URL}
      AWS_S3_NAME_BUCKET: ${AWS_S3_NAME_BUCKET}
      AWS_S3_ACCESS_KEY_ID: ${AWS_S3_ACCESS_KEY_ID}
      AWS_S3_SECRET_ACCESS_KEY: ${AWS_S3_SECRET_ACCESS_KEY}
      DEFAULT_AVATAR: ${DEFAULT_AVATAR}
    ports:
      - ${PORT_SERVER}:${PORT_SERVER}
    volumes:
      - ../server/dist/:/server/dist # production
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_SERVER_IP}
    depends_on:
      - mongo
  node-client:
    container_name: ${CONTAINER_NAME_CLIENT}
    restart: always

    build:
      context: ../
      dockerfile: ./client/docker/Dockerfile.prod # production

    env_file:
      - ../.env
    ports:
      - ${PORT_CLIENT}:${PORT_CLIENT}
    volumes:
      - ../client/src:/client/src/ # development
    environment:
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_URL_INTERNAL: ${NEXTAUTH_URL_INTERNAL}
      SECRET: ${SECRET}
      NEXTAUTH_SECRET: ${SECRET}
      FACEBOOK_CLIENT_ID: ${FACEBOOK_CLIENT_ID}
      FACEBOOK_CLIENT_SECRET: ${FACEBOOK_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      NEXT_PUBLIC_SOCKET_URL: ${SOCKET_URL}
      NEXT_PUBLIC_SERVER_URL: ${BASE_URL_SERVER}
    networks:
      box_universe:
        ipv4_address: ${CONTAINER_CLIENT_IP}
    depends_on:
      - node-server
networks:
  box_universe:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: ${CONTAINER_SUBNET}
